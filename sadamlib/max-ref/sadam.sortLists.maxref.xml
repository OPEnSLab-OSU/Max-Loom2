<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="sadam.sortLists">
	<digest>
		Sort a set of lists simultaneously
	</digest>
	<description>
		<o>
			sadam.sortLists
		</o>
		will sort lists simultaneously. It is similar to the sorting functionality of spreadsheet editors. Each inlet receives a list which represents a 'column' of the spreadsheet. The 'rows' of the original data are kept together during the sorting process. Afterwards each sorted 'column' is output through the respective outlet.<br /><br />
		Real sorting is done only for one input list, which is specified as a second (optional) argument during object creation (which defaults to the leftmost inlet). To keep the 'rows' of the input together, the other lists are re-arranged according to the sorted one. If the input lists have different numbers of items, the ones that have more elements than the list with the lowest range will be truncated.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Ádám Siska (sales@sadam.hu)
		</metadata>
		<metadata name="tag">
			Max
		</metadata>
		<metadata name="tag">
			Data
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" name="INLET_NAME">
			<digest>
				Input lists representing the 'columns' of the input spreadsheet. The number of inlets is set by the first argument of the object.
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" name="OUTLET_NAME">
			<digest>
				Output lists representing the sorted 'columns' of the spreadsheet. The number of outlets is set by the first argument of the object.
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="Number of columns" type="int" optional="0">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				The number of the 'columns' of the 'spreadsheet' to be sorted.
			</description>
		</objarg>
		<objarg name="Default sorter column" type="int" optional="1">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				The ID of the column which leads the sorting process. The leftmost input has an ID of 1. If this argument is smaller than 1, it will be interpreted as the leftmost column, while if it is bigger than the number of columns, it will be interpreted as the rightmost column. The default value is 1.
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Triggers sorting.
			</description>
		</method>
		<method name="active">
			<arglist>
				<arg name="Column number" type="int" optional="0" id="0" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Sets the column which leads the sorting process. The leftmost input has an ID of 1. If the given parameter is smaller than 1, it will be interpreted as the leftmost column, while if it is bigger than the number of columns, it will be interpreted as the rightmost column.
			</description>
		</method>
		<method name="list">
			<arglist>
				<arg name="Data" type="list" optional="0" id="0" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				On the non-leftmost inlet, it sets an input column. On the leftmost inlet, it sets the according input column and triggers sorting.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<!--EXAMPLE-->
	<examplelist>
		<example img="sadam.sortLists.png" caption="Sorting a 3x3 matrix of mixed data according to its last column." />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="zl" />
	</seealsolist>
</c74object>
