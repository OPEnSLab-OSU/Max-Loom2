<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="sadam.interpol">
	<digest>
		A generic interpolation/extrapolation tool
	</digest>
	<description>
		<o>
			sadam.interpol
		</o>
		will interpolate and extrapolate on a given dataset. The dataset is defined by a list containing pairs of numbers (except for Bézier curves, which have slightly different format), where each pair denotes a two dimensional point. The dataset is expected to be ordered according to the x-coordinate of the points. If the dataset contains less points than required for the specified method, the object will do a 'best guess' for the missing points.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Ádám Siska (sales@sadam.hu)
		</metadata>
		<metadata name="tag">
			Max
		</metadata>
		<metadata name="tag">
			Math
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" name="INLET_NAME">
			<digest>
				(int/float/list) input coordinate(s).
			</digest>
			<description>
				(int/float/list) input coordinate(s).
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" name="OUTLET_NAME">
			<digest>
				(int/float/list) output coordinate(s).
			</digest>
			<description>
				(int/float/list) output coordinate(s).
			</description>
		</outlet>
		<outlet id="1" name="OUTLET_NAME">
			<digest>
				Dump outlet.
			</digest>
			<description>
				Dump outlet.
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist />
	<!--MESSAGES-->
	<methodlist>
		<method name="int">
			<arglist>
				<arg name="input coordinate" type="int" optional="0" id="0" />
			</arglist>
			<digest>
				Triggers interpolation/extrapolation.
			</digest>
			<description>
				Triggers interpolation/extrapolation.
			</description>
		</method>
		<method name="float">
			<arglist>
				<arg name="input coordinate" type="float" optional="0" id="0" />
			</arglist>
			<digest>
				Triggers interpolation/extrapolation.
			</digest>
			<description>
				Triggers interpolation/extrapolation.
			</description>
		</method>
		<method name="list">
			<arglist>
				<arg name="input coordinates" type="list" optional="0" id="0" />
			</arglist>
			<digest>
				Triggers interpolation/extrapolation for all numbers in the list and outputs a list containing the interpolated/extrapolation values.
			</digest>
			<description>
				Triggers interpolation/extrapolation for all numbers in the list and outputs a list containing the interpolated/extrapolation values.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="method" get="1" set="1" type="symbol" size="1">
			<digest>
				Sets interpolation/extrapolation method.
			</digest>
			<description>
				Sets the interpolation/extrapolation method. The supported methods are:<br />
				<ul>
					<ul><i>bezier:</i> The dataset is interpreted as a set of y-values that are placed equidistantly over the x axis on the range [0,1]. The incoming values are also clipped to the [0,1] range: if a negative value arrives, the output will be the first element of the dataset; if a value bigger than 1 arrives, the output will be the last element of the dataset.</ul>
					<ul><i>linear:</i> Piecewise linear interpolation/extrapolation. Extrapolation is based on the first and last interpolated line segments, respectively.</ul>
					<ul><i>polinomial:</i> Polinomial interpolation/extrapolation. The interpolation polinomial is computed using the Lagrange method. The resulting polinomial is of minimal degree (which is the number of fixed points minus one).</ul>
					<ul><i>fixed_spline:</i> Cubic spline interpolation/extrapolation with fixed first derivates at the extremal points of the dataset. The last two values of the dataset are these fixed values, the last but one element of the dataset being the first derivate at the leftmost end and the last element of the dataset being the first derivate of the rightmost end. Therefore, if the dataset consists of less than four values, the object will output NaN (not-a-number) values for any incoming message.</ul>
					<ul><i>natural_spline:</i> Cubic spline interpolation/extrapolation with zero second derivates at the extremal points of the dataset.</ul>
					<ul><i>spline:</i> A shortened form for natural_spline.</ul>
				</ul>
			</description>
		</attribute>
		<attribute name="points" get="1" set="1" type="list" size="">
			<digest>
				Sets the dataset for interpolation/extrapolation.
			</digest>
			<description>
				Sets the fixed points of the interpolation/extrapolation. For Bézier method, these values are the y coordinates of the control points with equidistant x coordinates distributed in the x-range [0,1]. For any other method, the values are pairs of numbers representing the x and y coordinates of the fixed points of the interpolation/extrapolation. In these cases, the points are expected to be already sorted by their x-coordinates. If the dataset is empty, the object will output NaN (not-a-numer) values for any incoming message. If the dataset contains only one point (in the Bézier case this means one value, in the other cases this means two values), the object will always return that single value. If the number of fixed points is more than one but less than the minimum expected number of fixed points for a specific method, the missing points are automatically inserted using linear interpolation between the extremal points of the dataset.
			</description>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example img="sadam.interpol.png" caption="An easy way of MIDI data mapping." />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="expr" />
		<seealso name="vexpr" />
		<seealso name="sadam.canvas" />
		<seealso name="sadam.envelopeGenerator" />
	</seealsolist>
</c74object>
