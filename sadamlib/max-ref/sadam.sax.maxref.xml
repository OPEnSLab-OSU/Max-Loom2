<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="sadam.sax">
	<digest>
		A Simple API for XML (SAX) interface for Max.
	</digest>
	<description>
		<o>
			sadam.sax
		</o>
		will parse XML documents using SAX. The output will be sent out for each Element as a sequence (from right to left) consisting of the Element Index (the number of the Element in the XML), the Tree Depth of the Element (the Document Element is at level 0, its children are at level 1 etc.), the Element's Tag Name, the Attributes, and finally the Text Content (which is a concatenation of all Text and CDATA nodes). The leftmost outlet serves as an error outlet: if any error happens during parsing, it returns -1, otherwise it returns 0 after finishing the parsing process.<br />
		<br />
		<m>sadam.dom</m> and <m>sadam.sax</m> are both W3C compliant XML parsers, however, this means some overhead in terms of resources. If you need a lightweight, fast XML parser and you can live with some limitations regarding W3C compliance, consider using <m>sadam.rapidXML</m>.<br />
		This object was commissioned by Georg Hajdu for the MaxScore project. See <a href="http://www.computermusicnotation.com">http://www.computermusicnotation.com</a>.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Ádám Siska (sales@sadam.hu)
		</metadata>
		<metadata name="tag">
			Max
		</metadata>
		<metadata name="tag">
			Data
		</metadata>
	</metadatalist>
	<!--ARGUMENTS-->
	<objarglist />
	<!--MESSAGES-->
	<methodlist>
		<method name="anything">
			<arglist />
			<digest>
				TEXT_HERE
			</digest>
			<description>
				The object will collect all incoming messages and concatenate them. When sending a <m>bang</m>, the object will try to parse the messages received since the previous <m>bang</m> as a single XML.
			</description>
		</method>
		<method name="bang">
			<arglist />
			<digest>
				TEXT_HERE
			</digest>
			<description>
				The object will collect all incoming messages and concatenate them. When sending a <m>bang</m>, the object will try to parse the messages received since the previous <m>bang</m> as a single XML.
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Clears the buffer that collects the incoming messages that could later be parsed.
			</description>
		</method>
		<method name="parse">
			<arglist>
				<arg name="XML" type="list" optional="0" id="0" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Parses the XML given as an argument.
			</description>
		</method>
		<method name="read">
			<arglist>
				<arg name="File Name" type="symbol" optional="1" id="0" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Parses an XML stored in a file. If no filename is given, it lets the user select one.
			</description>
		</method>
		<method name="readagain">
			<arglist />
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Reloads the last read XML. If there was no XML read, it lets the user select one.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="redundant" get="0" set="1" type="int" size="1">
			<digest>
				Output Element Index, Tree Depth and Element Name for each Attribute and Element Text Content.
			</digest>
			<description>
				Enables (1) or disables (0) the reduntant state of the 
				<o>
					sadam.sax
				</o>
				object. The default is 0 (disabled). When enabled, each Attribute (or Element Text Content) output will be preceeded by sending the Element Index, Tree Depth and Element Name values.
			</description>
		</attribute>
		<attribute name="symbolOutput" get="0" set="1" type="int" size="1">
			<digest>
				Output texts as single <m>symbol</m>s.
			</digest>
			<description>
				When set to (1), all Element Text Content and Attribute Value fields will be sent out as single symbols. When set to (0), which is the default setting, the output will be a Max list.
			</description>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example img="sadam.sax.png" caption="How could it be simpler?..." />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="sadam.dom" />
		<seealso name="sadam.empty" />
		<seealso name="sadam.rapidXML" />
	</seealsolist>
</c74object>
