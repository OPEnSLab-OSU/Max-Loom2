<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="sadam.prime">
	<digest>
		Compute the closest prime numbers and the prime factorization of a positive integer
	</digest>
	<description>
		<o>
			sadam.prime
		</o>
		will compute the closest prime numbers to the absolute value of any integer input. It also reports whether the absolute value of the input is a prime or not. Since the smallest prime number is 2, if the absolute value of the input is smaller than 2, the outlet reporting the closest smaller prime will give false results (it reports the absolute value of the input). The object uses an internal prime table to analyse the primes, which can also be printed to the Max window.<br />
		<br />
		On 64-bit systems, the object will not accept inputs that can't fit on 32 bits. The reason is that a prime table big enough to support 64-bit integer analysis would require extremely amounts of memory.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Ádám Siska (sales@sadam.hu)
		</metadata>
		<metadata name="tag">
			Max
		</metadata>
		<metadata name="tag">
			Math
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" name="INLET_NAME">
			<digest>
				(int) Number to be tested.
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" name="OUTLET_NAME">
			<digest>
				1 if the input is prime, 0 if not.
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
		<outlet id="1" name="OUTLET_NAME">
			<digest>
				Closest smaller prime to the input.
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
		<outlet id="2" name="OUTLET_NAME">
			<digest>
				Closest bigger prime to the input.
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
		<outlet id="3" name="OUTLET_NAME">
			<digest>
				Prime factors as a list of primes of the input.
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="Number to be tested" type="long" optional="1">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				The number to be tested. Default: 0.
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="bang">
			<arglist />
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Output again the closest primes to the last incoming number and whether this number was prime.
			</description>
		</method>
		<method name="dump">
			<arglist />
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Print the internal prime table to the Max window.
			</description>
		</method>
		<method name="set">
			<arglist>
				<arg name="input" type="int" optional="0" id="0" />
			</arglist>
			<digest>
				TEXT_HERE
			</digest>
			<description>
				Sets the number to test without causing any output.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<!--EXAMPLE-->
	<examplelist>
		<example img="sadam.prime.png" caption="An example to find the biggest prime number that can be represented by Max." />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="sadam.gcd" />
		<seealso name="sadam.lcm" />
	</seealsolist>
</c74object>
