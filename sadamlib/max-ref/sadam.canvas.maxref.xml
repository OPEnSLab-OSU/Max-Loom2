<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="sadam.canvas">
	<digest>
		An alternative canvas for Max
	</digest>
	<description>
		<o>
			sadam.canvas
		</o>
		is a user-interactive vectorized drawing tool. To draw, you need to create 'layers', which are logical containers encapsulating a sequence of drawing commands. These layers can be altered by the user with the mouse in an interactive way (eg. move, rotate etc.), although this feature can also be disabled in a per-layer basis. Affine and logical transformations can also be applied to the whole canvas, and a grid is accessible, too. The drawing commands are stored in an ordered list, which makes it possible to alter, delete, or insert drawing commands into a layer anytime.<br />
		This object was commissioned by Johannes Kretz for the KLANGPILOT project. See <a href="http://www.mdw.ac.at/zimt/downloads-e.html">http://www.mdw.ac.at/zimt/downloads-e.html</a>.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Ádám Siska (sales@sadam.hu)
		</metadata>
		<metadata name="tag">
			Max
		</metadata>
		<metadata name="tag">
			U/I
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" name="INLET_NAME">
			<digest>
				Various messages to manage layers and the general state of the canvas.
			</digest>
			<description>
				Various messages to manage layers and the general state of the canvas.
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" name="OUTLET_NAME">
			<digest>
				Reports user interaction.
			</digest>
			<description>
				Reports user interaction.
			</description>
		</outlet>
		<outlet id="1" name="OUTLET_NAME">
			<digest>
				Reports mouse state. Mouse tracking can be disabled to improve performance.
			</digest>
			<description>
				Reports mouse state. Mouse tracking can be disabled to improve performance.
			</description>
		</outlet>
		<outlet id="2" name="OUTLET_NAME">
			<digest>
				Responds to info requests.
			</digest>
			<description>
				Responds to info requests.
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist />
	<!--MESSAGES-->
	<methodlist>
		<method name="add_anchor">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="first coordinate" type="float" optional="0" id="1" />
				<arg name="second coordinate" type="float" optional="0" id="2" />
				<arg name="sensitivity radius" type="float" optional="0" id="3" />
			</arglist>
			<digest>
				Adds an anchor to the specified layer. The location of the anchor is expressed using local layer coordinates. The last parameter defines the radius of the sensitive area of the new anchor (the value is interpreted in the main physical coordinate system).
			</digest>
			<description>
				Adds an anchor to the specified layer. The location of the anchor is expressed using local layer coordinates. The last parameter defines the radius of the sensitive area of the new anchor (the value is interpreted in the main physical coordinate system).
			</description>
		</method>
		<method name="append">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="drawing command" type="symbol" optional="0" id="1" />
				<arg name="parameters" type="list" optional="1" id="2" />
			</arglist>
			<digest>
				Adds the specified drawing command to the end of the list of drawing commands of the specified layer. Detailed information about the drawing commands and their parameters can be found in the 'Detailed Description' subpatch of the 'Drawing Commands' patch of the help file.
			</digest>
			<description>
				Adds the specified drawing command to the end of the list of drawing commands of the specified layer. Detailed information about the drawing commands and their parameters can be found in the 'Detailed Description' subpatch of the 'Drawing Commands' patch of the help file.
			</description>
		</method>
		<method name="clear">
			<arglist />
			<digest>
				Removes all layers from the canvas.
			</digest>
			<description>
				Removes all layers from the canvas.
			</description>
		</method>
		<method name="create">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
			</arglist>
			<digest>
				Creates a layer with the given name.
			</digest>
			<description>
				Creates a layer with the given name.
			</description>
		</method>
		<method name="destroy">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
			</arglist>
			<digest>
				Removes the layer with the given name.
			</digest>
			<description>
				Removes the layer with the given name.
			</description>
		</method>
		<method name="draw_axes">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="value" type="int" optional="0" id="1" />
			</arglist>
			<digest>
				When set to non-zero, the base vectors of the specified layer whose visibility is not set to 'no' will always display.
			</digest>
			<description>
				When set to non-zero, the base vectors of the specified layer whose visibility is not set to 'no' will always display.
			</description>
		</method>
		<method name="drop_anchor">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="anchor index" type="int" optional="0" id="1" />
			</arglist>
			<digest>
				Removes an anchor from the specified layer. Anchors can be references using a sequentially incrementing number (starting from 0), according to their creation order. Note that if an anchor is removed, the reference index of each anchor that was created after this one will decrease by one.
			</digest>
			<description>
				Removes an anchor from the specified layer. Anchors can be references using a sequentially incrementing number (starting from 0), according to their creation order. Note that if an anchor is removed, the reference index of each anchor that was created after this one will decrease by one.
			</description>
		</method>
		<method name="dropfirst">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
			</arglist>
			<digest>
				Removes the first drawing command from the list of drawing commands of the specified layer.
			</digest>
			<description>
				Removes the first drawing command from the list of drawing commands of the specified layer.
			</description>
		</method>
		<method name="droplast">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
			</arglist>
			<digest>
				Removes the last drawing command from the list of drawing commands of the specified layer.
			</digest>
			<description>
				Removes the last drawing command from the list of drawing commands of the specified layer.
			</description>
		</method>
		<method name="erase">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="sequential number" type="int" optional="0" id="1" />
			</arglist>
			<digest>
				Removes the drawing command with the given sequential index from the list of drawing commands of the specified layer.
			</digest>
			<description>
				Removes the drawing command with the given sequential index from the list of drawing commands of the specified layer.
			</description>
		</method>
		<method name="getanchors">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
			</arglist>
			<digest>
				Sends the sequential list of anchors of the specified layer out the rightmost outlet.
			</digest>
			<description>
				Sends the sequential list of anchors of the specified layer out the rightmost outlet.
			</description>
		</method>
		<method name="getcommands">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
			</arglist>
			<digest>
				Sends the sequential list of drawing commands of the specified layer out the rightmost outlet.
			</digest>
			<description>
				Sends the sequential list of drawing commands of the specified layer out the rightmost outlet.
			</description>
		</method>
		<method name="getinfo">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
			</arglist>
			<digest>
				Sends general information about the specified layer out the rightmost outlet.
			</digest>
			<description>
				Sends general information about the specified layer out the rightmost outlet.
			</description>
		</method>
		<method name="getlayers">
			<arglist />
			<digest>
				Sends a list containing the name of every layer out the rightmost outlet.
			</digest>
			<description>
				Sends a list containing the name of every layer out the rightmost outlet.
			</description>
		</method>
		<method name="hide">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="hide" type="int" optional="0" id="1" />
			</arglist>
			<digest>
				With a non-zero argument, it hides the specified layer. Although the result is the same as setting the layer's transparency to 1, using the <m>hide</m> message results in more efficient performance.
			</digest>
			<description>
				With a non-zero argument, it hides the specified layer. Although the result is the same as setting the layer's transparency to 1, using the <m>hide</m> message results in more efficient performance.
			</description>
		</method>
		<method name="insert">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="sequential number" type="int" optional="0" id="1" />
				<arg name="drawing command" type="symbol" optional="0" id="2" />
				<arg name="parameters" type="list" optional="1" id="3" />
			</arglist>
			<digest>
				Inserts the specified drawing command into the list of drawing commands of the specified layer. The command will be inserted just before the drawing command with the specified index. Detailed information about the drawing commands and their parameters can be found in the 'Detailed Description' subpatch of the 'Drawing Commands' patch of the help file.
			</digest>
			<description>
				Inserts the specified drawing command into the list of drawing commands of the specified layer. The command will be inserted just before the drawing command with the specified index. Detailed information about the drawing commands and their parameters can be found in the 'Detailed Description' subpatch of the 'Drawing Commands' patch of the help file.
			</description>
		</method>
		<method name="move">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="first coordinate" type="float" optional="0" id="1" />
				<arg name="second coordinate" type="float" optional="0" id="2" />
			</arglist>
			<digest>
				Moves the origin of the specified layer (thus the entire layer) to the specified location, expressed in the main logical coordinate system.
			</digest>
			<description>
				Moves the origin of the specified layer (thus the entire layer) to the specified location, expressed in the main logical coordinate system.
			</description>
		</method>
		<method name="move_anchor">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="anchor index" type="int" optional="0" id="1" />
				<arg name="first coordinate" type="float" optional="0" id="2" />
				<arg name="second coordinate" type="float" optional="0" id="3" />
			</arglist>
			<digest>
				Moves the specified anchor of the specified layer to the specified location, expressed in the main logical coordinate system. Since anchors are tied to their parent layers, this results in the displacement of the whole layer.
			</digest>
			<description>
				Moves the specified anchor of the specified layer to the specified location, expressed in the main logical coordinate system. Since anchors are tied to their parent layers, this results in the displacement of the whole layer.
			</description>
		</method>
		<method name="prepend">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="drawing command" type="symbol" optional="0" id="1" />
				<arg name="parameters" type="list" optional="1" id="2" />
			</arglist>
			<digest>
				Adds the specified drawing command to the beginning of the list of drawing commands of the specified layer. Detailed information about the drawing commands and their parameters can be found in the 'Detailed Description' subpatch of the 'Drawing Commands' patch of the help file.
			</digest>
			<description>
				Adds the specified drawing command to the beginning of the list of drawing commands of the specified layer. Detailed information about the drawing commands and their parameters can be found in the 'Detailed Description' subpatch of the 'Drawing Commands' patch of the help file.
			</description>
		</method>
		<method name="scroll">
			<arglist>
				<arg name="x-scroll" type="float" optional="0" id="0" />
				<arg name="y-scroll" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				Scrolls the entire canvas.
			</digest>
			<description>
				Scrolls the entire canvas.
			</description>
		</method>
		<method name="set_a">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="x-endpoint" type="float" optional="0" id="1" />
				<arg name="y-endpoint" type="float" optional="0" id="2" />
				<arg name="length" type="float" optional="1" id="3" />
			</arglist>
			<digest>
				Sets the first base vector of the specified layer. The first two numeric parameters are the coordinates of the new endpoint of the vector expressed in the main logical coordinate system. If a third numeric argument is present as well, it will set the vector's length in the layer's coordinate system, thus, the unit in the local coordinate system.
			</digest>
			<description>
				Sets the first base vector of the specified layer. The first two numeric parameters are the coordinates of the new endpoint of the vector expressed in the main logical coordinate system. If a third numeric argument is present as well, it will set the vector's length in the layer's coordinate system, thus, the unit in the local coordinate system.
			</description>
		</method>
		<method name="set_a_ignore_mouse">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="ignore mouse" type="int" optional="0" id="1" />
			</arglist>
			<digest>
				If set to non-zero, the first base vector of the specified layer will ignore any mouse interaction.
			</digest>
			<description>
				If set to non-zero, the first base vector of the specified layer will ignore any mouse interaction.
			</description>
		</method>
		<method name="set_a_length">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="length" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				Sets the length of the first base vector expressed in the local coordinate system of the layer. Since the coordinates of the first base vector in the local coordinate system are always (x, 0), this method actually defines the unit length of the first coordinate axis of the local coordinate system.
			</digest>
			<description>
				Sets the length of the first base vector expressed in the local coordinate system of the layer. Since the coordinates of the first base vector in the local coordinate system are always (x, 0), this method actually defines the unit length of the first coordinate axis of the local coordinate system.
			</description>
		</method>
		<method name="set_a_radius">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="radius" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				Sets the radius of the area of sensitivity of the first base vector of the specified layer. This radius is expressed in the main physical coordinate system.
			</digest>
			<description>
				Sets the radius of the area of sensitivity of the first base vector of the specified layer. This radius is expressed in the main physical coordinate system.
			</description>
		</method>
		<method name="set_a_visibility">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="visibility" type="symbol" optional="0" id="1" />
			</arglist>
			<digest>
				Sets the visibility of the first base vector. If set to 'yes', the base vector (including the circle indicating its sensitivity area) will always display. If set to 'no', neither the base vector nor its sensitivity area would display (even if <m>draw_axes</m> is set to non-zero). If set to 'auto', the base vector would display each time when the user hovers over the sensitivity area of any base vector of the layer, or if <m>draw_axes</m> is set to a non-zero value, and the sensitive area will display if the user hovers over it with the mouse.
			</digest>
			<description>
				Sets the visibility of the first base vector. If set to 'yes', the base vector (including the circle indicating its sensitivity area) will always display. If set to 'no', neither the base vector nor its sensitivity area would display (even if <m>draw_axes</m> is set to non-zero). If set to 'auto', the base vector would display each time when the user hovers over the sensitivity area of any base vector of the layer, or if <m>draw_axes</m> is set to a non-zero value, and the sensitive area will display if the user hovers over it with the mouse.
			</description>
		</method>
		<method name="set_anchor_ignore_mouse">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="anchor index" type="int" optional="0" id="1" />
				<arg name="ignore mouse" type="int" optional="0" id="2" />
			</arglist>
			<digest>
				If set to non-zero, the specified anchor of the specified layer will ignore any mouse interaction.
			</digest>
			<description>
				If set to non-zero, the specified anchor of the specified layer will ignore any mouse interaction.
			</description>
		</method>
		<method name="set_anchor_radius">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="anchor index" type="int" optional="0" id="1" />
				<arg name="radius" type="float" optional="0" id="2" />
			</arglist>
			<digest>
				Sets the radius of the area of sensitivity of the specified anchor of the specified layer. This radius is expressed in the main physical coordinate system.
			</digest>
			<description>
				Sets the radius of the area of sensitivity of the specified anchor of the specified layer. This radius is expressed in the main physical coordinate system.
			</description>
		</method>
		<method name="set_anchor_visibility">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="anchor index" type="int" optional="0" id="1" />
				<arg name="visibility" type="symbol" optional="0" id="2" />
			</arglist>
			<digest>
				Sets the visibility of the specified anchor. If set to 'yes', the anchor (that is, the circle indicating its sensitivity area) will always display. If set to 'no', the anchor would never display. If set to 'auto', the anchor would display each time when the user hovers over its sensitivity area with the mouse.
			</digest>
			<description>
				Sets the visibility of the specified anchor. If set to 'yes', the anchor (that is, the circle indicating its sensitivity area) will always display. If set to 'no', the anchor would never display. If set to 'auto', the anchor would display each time when the user hovers over its sensitivity area with the mouse.
			</description>
		</method>
		<method name="set_b">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="x-endpoint" type="float" optional="0" id="1" />
				<arg name="y-endpoint" type="float" optional="0" id="2" />
				<arg name="length" type="float" optional="1" id="3" />
			</arglist>
			<digest>
				Sets the second base vector of the specified layer. The first two numeric parameters are the coordinates of the new endpoint of the vector expressed in the main logical coordinate system. If a third numeric argument is present as well, it will set the vector's length in the layer's coordinate system, thus, the unit in the local coordinate system.
			</digest>
			<description>
				Sets the second base vector of the specified layer. The first two numeric parameters are the coordinates of the new endpoint of the vector expressed in the main logical coordinate system. If a third numeric argument is present as well, it will set the vector's length in the layer's coordinate system, thus, the unit in the local coordinate system.
			</description>
		</method>
		<method name="set_b_ignore_mouse">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="ignore mouse" type="int" optional="0" id="1" />
			</arglist>
			<digest>
				If set to non-zero, the second base vector of the specified layer will ignore any mouse interaction.
			</digest>
			<description>
				If set to non-zero, the second base vector of the specified layer will ignore any mouse interaction.
			</description>
		</method>
		<method name="set_b_length">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="length" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				Sets the length of the second base vector expressed in the local coordinate system of the layer. Since the coordinates of the second base vector in the local coordinate system are always (0, y), this method actually defines the unit length of the second coordinate axis of the local coordinate system.
			</digest>
			<description>
				Sets the length of the second base vector expressed in the local coordinate system of the layer. Since the coordinates of the second base vector in the local coordinate system are always (0, y), this method actually defines the unit length of the second coordinate axis of the local coordinate system.
			</description>
		</method>
		<method name="set_b_radius">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="radius" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				Sets the radius of the area of sensitivity of the second base vector of the specified layer. This radius is expressed in the main physical coordinate system.
			</digest>
			<description>
				Sets the radius of the area of sensitivity of the second base vector of the specified layer. This radius is expressed in the main physical coordinate system.
			</description>
		</method>
		<method name="set_b_visibility">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="visibility" type="symbol" optional="0" id="1" />
			</arglist>
			<digest>
				Sets the visibility of the second base vector. If set to 'yes', the base vector (including the circle indicating its sensitivity area) will always display. If set to 'no', neither the base vector nor its sensitivity area would display (even if <m>draw_axes</m> is set to non-zero). If set to 'auto', the base vector would display each time when the user hovers over the sensitivity area of any base vector of the layer, or if <m>draw_axes</m> is set to a non-zero value, and the sensitive area will display if the user hovers over it with the mouse.
			</digest>
			<description>
				Sets the visibility of the second base vector. If set to 'yes', the base vector (including the circle indicating its sensitivity area) will always display. If set to 'no', neither the base vector nor its sensitivity area would display (even if <m>draw_axes</m> is set to non-zero). If set to 'auto', the base vector would display each time when the user hovers over the sensitivity area of any base vector of the layer, or if <m>draw_axes</m> is set to a non-zero value, and the sensitive area will display if the user hovers over it with the mouse.
			</description>
		</method>
		<method name="transform">
			<arglist>
				<arg name="xx" type="float" optional="0" id="0" />
				<arg name="yx" type="float" optional="0" id="1" />
				<arg name="xy" type="float" optional="0" id="2" />
				<arg name="yy" type="float" optional="0" id="3" />
				<arg name="x0" type="float" optional="0" id="4" />
				<arg name="y0" type="float" optional="0" id="5" />
			</arglist>
			<digest>
				Sets the global transformations applied to the entire canvas. The coordinates are expressed in the main physical coordinate system. Detailed information about layer and canvas transformations and transformation modes can be found in the 'Transforms' patch of the help file.
			</digest>
			<description>
				Sets the global transformations applied to the entire canvas. The coordinates are expressed in the main physical coordinate system. Detailed information about layer and canvas transformations and transformation modes can be found in the 'Transforms' patch of the help file.
			</description>
		</method>
		<method name="transform_mode">
			<arglist>
				<arg name="layer name or value" type="symbol or int" optional="0" id="0" />
				<arg name="value" type="int" optional="0" id="1" />
			</arglist>
			<digest>
				If the name of a layer is specified by the first argument, it sets the transform mode of the specified layer. In this case, the second argument is obligatory. If the first argument is an integer, it sets the transform mode for all layers simultaneously. A non-zero value corresponds to logical transforms, while 0 corresponds to affine transforms. Detailed information about layer and canvas transformations and transformation modes can be found in the 'Transforms' patch of the help file.
			</digest>
			<description>
				If the name of a layer is specified by the first argument, it sets the transform mode of the specified layer. In this case, the second argument is obligatory. If the first argument is an integer, it sets the transform mode for all layers simultaneously. A non-zero value corresponds to logical transforms, while 0 corresponds to affine transforms. Detailed information about layer and canvas transformations and transformation modes can be found in the 'Transforms' patch of the help file.
			</description>
		</method>
		<method name="transparent">
			<arglist>
				<arg name="layer name" type="symbol" optional="0" id="0" />
				<arg name="transparency" type="float" optional="0" id="1" />
			</arglist>
			<digest>
				Sets how transparent the specified layer should be. A value of 0 will not alter anything; a value of 1 will make the layer completely transparent.
			</digest>
			<description>
				Sets how transparent the specified layer should be. A value of 0 will not alter anything; a value of 1 will make the layer completely transparent.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<attributelist>
		<attribute name="anchorcolor" get="0" set="1" type="list" size="4">
			<digest>
				Sets anchor colour.
			</digest>
			<description>
				Sets the colour of the anchors of layers (when displayed).
			</description>
		</attribute>
		<attribute name="axiscolor" get="0" set="1" type="list" size="4">
			<digest>
				Sets axis colour.
			</digest>
			<description>
				Sets the colour of the base vectors of layers (when displayed).
			</description>
		</attribute>
		<attribute name="bgcolor" get="0" set="1" type="list" size="4">
			<digest>
				Sets background colour.
			</digest>
			<description>
				Sets the background colour of the canvas.
			</description>
		</attribute>
		<attribute name="border" get="0" set="1" type="int" size="1">
			<digest>
				Paint border.
			</digest>
			<description>
				Enables (1) or disables (0) the drawing of a border around the object's window. Default is 1 (enabled).
			</description>
		</attribute>
		<attribute name="color" get="0" set="1" type="list" size="4">
			<digest>
				Sets default drawing colour.
			</digest>
			<description>
				As long as a layer doesn't include a 'color' drawing command, this colour is used for drawing.
			</description>
		</attribute>
		<attribute name="fast_render" get="0" set="1" type="int" size="1">
			<digest>
				Enables or disables fast rendering.
			</digest>
			<description>
				When enabled (1), <m>line</m>, <m>line_to</m> and <m>rel_line_to</m> will use a fast rendering method. However, in these cases, lines will always belong to a separate drawing path, therefore you won't be able to 'fill' the shape that they delimit. The default is 0 (disabled).
			</description>
		</attribute>
		<attribute name="gridcolor_x" get="0" set="1" type="list" size="4">
			<digest>
				Sets grid colour (X axis).
			</digest>
			<description>
				Sets the colour of the X axis of the grid.
			</description>
		</attribute>
		<attribute name="gridcolor_y" get="0" set="1" type="list" size="4">
			<digest>
				Sets grid colour (Y axis).
			</digest>
			<description>
				Sets the colour of the Y axis of the grid.
			</description>
		</attribute>
		<attribute name="grid_display" get="0" set="1" type="int" size="1">
			<digest>
				Displays or hides the grid.
			</digest>
			<description>
				Displays (1) or hides (0) the grid. The default is 0 (hide).
			</description>
		</attribute>
		<attribute name="grid_enable" get="0" set="1" type="int" size="1">
			<digest>
				Enables or disables the 'snap to grid' functionality.
			</digest>
			<description>
				When enabled (1), anchor displacements and base vector modifications triggered by user interaction will always snap to the grid. This behavior is independent of the display status of the grid; even if the grid is hidden, 'snap to grid' can be enabled, and vice versa. Snap to grid works only on those axes where the grid density is nonzero. The default is 0 (disabled).
			</description>
		</attribute>
		<attribute name="grid_x" get="0" set="1" type="float" size="1">
			<digest>
				Sets density of grid on the x axis.
			</digest>
			<description>
				Sets the density of the grid on the x axis. This value is expressed in the x-unit of the main logical canvas. A value of 0 will disable the x-aligning (thus, the grid will consist only of horizontal lines and if 'snap to grid' is enabled, items will only snap in y-direction).
			</description>
		</attribute>
		<attribute name="grid_y" get="0" set="1" type="float" size="1">
			<digest>
				Sets density of grid on the y axis.
			</digest>
			<description>
				Sets the density of the grid on the y axis. This value is expressed in the y-unit of the main logical canvas. A value of 0 will disable the y-aligning (thus, the grid will consist only of vertical lines and if 'snap to grid' is enabled, items will only snap in x-direction).
			</description>
		</attribute>
		<attribute name="pen_size" get="0" set="1" type="float" size="1">
			<digest>
				Sets default pen size.
			</digest>
			<description>
				As long as a layer doesn't include a 'pen_size' drawing command, this pen size is used for drawing.
			</description>
		</attribute>
		<attribute name="textcolor" get="0" set="1" type="list" size="4">
			<digest>
				Sets default text colour.
			</digest>
			<description>
				As long as a layer doesn't include a 'textcolor' drawing command, this colour is used for displaying texts.
			</description>
		</attribute>
		<attribute name="track_mouse" get="0" set="1" type="int" size="1">
			<digest>
				Enables or disables mouse tracking.
			</digest>
			<description>
				When enabled, mouse movement will continuously be reported on the middle outlet. The default is 0 (disabled).
			</description>
		</attribute>
	</attributelist>
	<!--EXAMPLE-->
	<examplelist>
		<example img="sadam.canvas.png" caption="The skeleton of a basic sequencer." />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="lcd" />
	</seealsolist>
</c74object>
