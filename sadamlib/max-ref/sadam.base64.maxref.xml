<?xml version="1.0" encoding="utf-8" standalone="yes"?>

<?xml-stylesheet href="./_c74_ref.xsl" type="text/xsl"?>

<!--This is an automatically generated file. DO NOT EDIT THIS FILE DIRECTLY. Rather, use the _ref.xml files found in the 'edits' folder.-->
<c74object name="sadam.base64">
	<digest>
		base64 encoder/unencoder object
	</digest>
	<description>
		<o>
			sadam.base64
		</o>
		will encode and unencode any message you send it (actually it takes into consideration only the first element of the message if the message has multiple elements). Since the base64 encoding contains only alphanumerical characters and a few symbols (which are: +, / and =), the encoded string can safely be used outside the native Max world (for example, with MXJ or in text files). Combined with
		<o>
			sadam.lzo
		</o>
		it can be used to safely transmit huge amount of data over network using for example the MXJ-based
		<o>
			jit.net.send
		</o>
		object, or for storing (originally) binary data in an external text file.<br />
		This object was commissioned by Georg Hajdu for the Quintet.net platform. See <a href="http://www.quintet.net">http://www.quintet.net</a>.
	</description>
	<!--METADATA-->
	<metadatalist>
		<metadata name="author">
			Ádám Siska (sales@sadam.hu)
		</metadata>
		<metadata name="tag">
			Max
		</metadata>
		<metadata name="tag">
			Data
		</metadata>
	</metadatalist>
	<!--INLETS-->
	<inletlist>
		<inlet id="0" name="INLET_NAME">
			<digest>
				(symbol) Message to be Unencoded
			</digest>
			<description>
				TEXT_HERE
			</description>
		</inlet>
	</inletlist>
	<!--OUTLETS-->
	<outletlist>
		<outlet id="0" name="OUTLET_NAME">
			<digest>
				(symbol) Unencoded Message
			</digest>
			<description>
				TEXT_HERE
			</description>
		</outlet>
	</outletlist>
	<!--ARGUMENTS-->
	<objarglist>
		<objarg name="object type selector" type="symbol" optional="1">
			<digest>
				TEXT_HERE
			</digest>
			<description>
				If a
				<m>
					symbol
				</m>
				argument is specifyed for
				<o>
					sadam.base64
				</o>
				and its value is
				<m>
					encode
				</m>
				then the object will act as an encoder. In any other case (including the case when no
				<m>
					symbol
				</m>
				argument is present) the object will act an unencoder.
			</description>
		</objarg>
	</objarglist>
	<!--MESSAGES-->
	<methodlist>
		<method name="symbol">
			<arglist />
			<digest>
				TEXT_HERE
			</digest>
			<description>
				In encoder mode, the message to encode. In unencoder mode, the message to unencode.
			</description>
		</method>
	</methodlist>
	<!--ATTRIBUTES-->
	<!--EXAMPLE-->
	<examplelist>
		<example img="sadam.base64.png" caption="An encoded string and the result of the unencoding process (identical to the original input)" />
	</examplelist>
	<!--SEEALSO-->
	<seealsolist>
		<seealso name="sadam.lzo" />
	</seealsolist>
	<misc name="Output">
		<entry name="symbol">
			<description>
				In encoder mode, the encoded message. In unencoder mode, the unencoded message.
			</description>
		</entry>
	</misc>
</c74object>
